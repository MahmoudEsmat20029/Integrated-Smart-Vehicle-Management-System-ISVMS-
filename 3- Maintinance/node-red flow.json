[
    {
        "id": "515dd32376106bcc",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cae9eb0c08016296",
        "type": "mqtt in",
        "z": "515dd32376106bcc",
        "name": "",
        "topic": "esp32/Sensors/Graduation_Project",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "aa12e9813344faa2",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 320,
        "wires": [
            [
                "047ab14f3f23c33e",
                "8a845de86afe78d1",
                "db8ff90216645b39"
            ]
        ]
    },
    {
        "id": "047ab14f3f23c33e",
        "type": "function",
        "z": "515dd32376106bcc",
        "name": "BMP180 Pressure",
        "func": "const data = RED.util.cloneMessage(msg.payload);\nconst regex = /Pressure: ([0-9.]+) Pa/;\nconst match = data.match(regex);\nif (match) {\n  msg.payload = parseFloat(match[1]);\n  return msg;\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 220,
        "wires": [
            [
                "ec285710beb20290",
                "947727daeaca9a88"
            ]
        ]
    },
    {
        "id": "ec285710beb20290",
        "type": "ui_gauge",
        "z": "515dd32376106bcc",
        "name": "",
        "group": "ee0fca3bc187cde4",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Pressure",
        "label": "Pa",
        "format": "{{value}}",
        "min": 0,
        "max": "2000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 780,
        "y": 220,
        "wires": []
    },
    {
        "id": "a795f75cf39b10a5",
        "type": "ui_gauge",
        "z": "515dd32376106bcc",
        "name": "",
        "group": "5378b93b5f482670",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Tempreture",
        "label": "C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 790,
        "y": 420,
        "wires": []
    },
    {
        "id": "789ef7b5a03006e0",
        "type": "ui_gauge",
        "z": "515dd32376106bcc",
        "name": "",
        "group": "ee0fca3bc187cde4",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Tempreture",
        "label": "C",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 790,
        "y": 320,
        "wires": []
    },
    {
        "id": "8a845de86afe78d1",
        "type": "function",
        "z": "515dd32376106bcc",
        "name": "LM35 Tempreture",
        "func": "const data = RED.util.cloneMessage(msg.payload);\nconst regex = /LM35 Temperature: ([0-9.]+) °C/;\nconst match = data.match(regex);\nif (match) {\n  msg.payload = parseFloat(match[1]);\n  return msg;\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 420,
        "wires": [
            [
                "a795f75cf39b10a5",
                "dedfe3acfe294e63"
            ]
        ]
    },
    {
        "id": "db8ff90216645b39",
        "type": "function",
        "z": "515dd32376106bcc",
        "name": "BMP180 Tempreture",
        "func": "const data = RED.util.cloneMessage(msg.payload);\nconst regex = /BMP085 Temperature: ([0-9.]+) °C/;\nconst match = data.match(regex);\nif (match) {\n  msg.payload = parseFloat(match[1]);\n  return msg;\n}\nreturn null;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 320,
        "wires": [
            [
                "789ef7b5a03006e0",
                "07ce483118c24c1c"
            ]
        ]
    },
    {
        "id": "947727daeaca9a88",
        "type": "debug",
        "z": "515dd32376106bcc",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 180,
        "wires": []
    },
    {
        "id": "07ce483118c24c1c",
        "type": "debug",
        "z": "515dd32376106bcc",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 280,
        "wires": []
    },
    {
        "id": "dedfe3acfe294e63",
        "type": "debug",
        "z": "515dd32376106bcc",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 380,
        "wires": []
    },
    {
        "id": "e588e3b7.ea2aa",
        "type": "mqtt in",
        "z": "515dd32376106bcc",
        "name": "",
        "topic": "/kdi/inTopic",
        "qos": "2",
        "broker": "87c43b9f.084818",
        "inputs": 0,
        "x": 240,
        "y": 120,
        "wires": [
            [
                "ec9d6ec7.b5a5f"
            ]
        ]
    },
    {
        "id": "13031a1d.85de16",
        "type": "debug",
        "z": "515dd32376106bcc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 739.9999523162842,
        "y": 57.732686042785645,
        "wires": []
    },
    {
        "id": "ec9d6ec7.b5a5f",
        "type": "json",
        "z": "515dd32376106bcc",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 382.9930877685547,
        "y": 120.69792795181274,
        "wires": [
            [
                "be367180.4db64",
                "13031a1d.85de16"
            ]
        ]
    },
    {
        "id": "be367180.4db64",
        "type": "function",
        "z": "515dd32376106bcc",
        "name": "set location",
        "func": "msg.payload =  {\n    name:\"±èµ¿ÀÏ¿¬±¸½Ç\",\n    lat:msg.payload.lat,\n    lon:msg.payload.lon,\n    icon:\"power-off\",\n    iconColor:\"red\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 531.9340648651123,
        "y": 117.1770691871643,
        "wires": [
            [
                "88539f7d.6d47b"
            ]
        ]
    },
    {
        "id": "88539f7d.6d47b",
        "type": "worldmap",
        "z": "515dd32376106bcc",
        "name": "NEOOOOO",
        "lat": "37.82",
        "lon": "126.8",
        "zoom": "",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "none",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriO,EsriDG,NatGeo,UKOS,OpTop",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 708.9931087493896,
        "y": 118.12162399291992,
        "wires": []
    },
    {
        "id": "aa12e9813344faa2",
        "type": "mqtt-broker",
        "name": "",
        "broker": "Test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "ee0fca3bc187cde4",
        "type": "ui_group",
        "name": "BMP180",
        "tab": "e3c2d37415922c60",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5378b93b5f482670",
        "type": "ui_group",
        "name": "LM35Tempreture",
        "tab": "e3c2d37415922c60",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "87c43b9f.084818",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.mqtt-dashboard.com",
        "port": "1883",
        "clientid": "adasdfsssrr",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "e3c2d37415922c60",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]